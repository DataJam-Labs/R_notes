dplyr::select(rate,sex,starts_with("me")) %>%
pivot_longer(-c(rate,sex), names_to="outcome",values_to="p" )
predictions
predict(ologit_affairs_rate_sex, type="probs")
predict(ologit_affairs_rate_sex, type="probs") %>% as_tibble()  %>% mutate(id = row_number()) %>%
pivot_longer(-id, names_to="vote", values_to="prob")
affairsdata_delta <- affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number()) %>% pivot_longer(-id, names_to="vote", values_to="prob_delta")
delta = 0.1
affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number()) %>% pivot_longer(-id, names_to="vote", values_to="prob_delta")
affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")
affairsdata_delta <- affairsdata %>% mutate(rate = rate + delta)
predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number())
affairsdata_delta <- affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number()) %>% pivot_longer(-id, names_to="affair", values_to="prob_delta")
affairsdata_delta
p_hat_delta <- p_hat_delta %>% left_join(p_hat, by=c("id","affair")) %>% mutate(me_sq = (prob_delta  - prob)/delta) %>% dplyr::select(id,vote,me_sq) %>% pivot_wider(names_from = "affair", values_from = "me_sq") %>% drop_na()
delta = 0.1
p_hat <- predict(ologit_affairs_rate_sex, type="probs") %>% as_tibble()  %>% mutate(id = row_number()) %>%
pivot_longer(-id, names_to="vote", values_to="prob")
affairsdata_delta <- affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number()) %>% pivot_longer(-id, names_to="affair", values_to="prob_delta")
p_hat_delta <- p_hat_delta %>% left_join(p_hat, by=c("id","affair")) %>% mutate(me_sq = (prob_delta  - prob)/delta) %>% dplyr::select(id,vote,me_sq) %>% pivot_wider(names_from = "affair", values_from = "me_sq") %>% drop_na()
delta = 0.1
p_hat <- predict(ologit_affairs_rate_sex, type="probs") %>% as_tibble()  %>% mutate(id = row_number()) %>%
pivot_longer(-id, names_to="affair", values_to="prob")
affairsdata_delta <- affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number()) %>% pivot_longer(-id, names_to="affair", values_to="prob_delta")
p_hat_delta <- p_hat_delta %>% left_join(p_hat, by=c("id","affair")) %>% mutate(me_sq = (prob_delta  - prob)/delta) %>% dplyr::select(id,vote,me_sq) %>% pivot_wider(names_from = "affair", values_from = "me_sq") %>% drop_na()
delta = 0.1
p_hat <- predict(ologit_affairs_rate_sex, type="probs") %>% as_tibble()  %>% mutate(id = row_number()) %>%
pivot_longer(-id, names_to="affair", values_to="prob")
affairsdata_delta <- affairsdata %>% mutate(rate = rate + delta)
p_hat_delta <- predict(ologit_affairs_rate_sex, newdata=affairsdata_delta ,type="probs")  %>% as_tibble() %>% mutate(id = row_number()) %>% pivot_longer(-id, names_to="affair", values_to="prob_delta")
p_hat_delta <- p_hat_delta %>% left_join(p_hat, by=c("id","affair")) %>% mutate(me_rate = (prob_delta  - prob)/delta) %>% dplyr::select(id,affair,me_rate) %>% pivot_wider(names_from = "affair", values_from = "me_rate") %>% drop_na()
p_hat_delta
p_hat_delta %>% dplyr::summarise(across(fiel:compulsivo, ~ mean(.x)))
summary(margins(ologit_affairs_rate_sex, variables = "rate"))
library("margins")
p_hat_delta %>% dplyr::summarise(across(fiel:compulsivo, ~ mean(.x)))
summary(margins(ologit_affairs_rate_sex, variables = "rate"))
p_hat_delta %>% dplyr::summarise(across(fiel:compulsivo, ~ mean(.x)))
grid <- affairsdata %>% data_grid(sex, .model=ologit_affairs_rate_sex)
grid_delta <- affairsdata %>% data_grid(sex, .model=ologit_affairs_rate_sex) %>% mutate(rate = rate + delta)
p_hat <- predict(ologit_affairs_rate_sex, type="probs", newdata =grid) %>% as_tibble()
p_hat
grid
p_hat <- predict(ologit_affairs_rate_sex, type="probs", newdata =grid) %>% as_tibble() %>%
mutate(id = c("F","M"))%>% pivot_longer(-id, names_to="affair", values_to="prob")
p_hat
p_hat_delta <- predict(ologit_affairs_rate_sex, type="probs", newdata =grid_delta) %>% as_tibble() %>%
mutate(id = c("F","M")) %>% pivot_longer(-id, names_to="affair", values_to="prob_delta")
p_hat_delta <- p_hat_delta %>% left_join(p_hat, by=c("id","affair")) %>% mutate(me_rate = (prob_delta  - prob)/delta) %>% dplyr::select(id,vote,me_rate) %>% pivot_wider(names_from = "affair", values_from = "me_rate") %>% drop_na(); p_hat_delta
p_hat_delta <- p_hat_delta %>% left_join(p_hat, by=c("id","affair")) %>% mutate(me_rate = (prob_delta  - prob)/delta) %>% dplyr::select(id,affair,me_rate) %>% pivot_wider(names_from = "affair", values_from = "me_rate") %>% drop_na(); p_hat_delta
xaringan:::inf_mr()
delta = 0.1
grid <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=mnlr_2)
p_hat
delta = 0.1
grid <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=mnlr_2)
library("tinytex")
library("tidyverse")
library("nnet")
library("modelr")
library("MASS")
library("tinytex")
library("tidyverse")
library("nnet")
library("modelr")
library("MASS")
data_paper <- read_csv("data_t_2.csv") %>% mutate(W=if_else(W=="TRUE",1,0))
data_paper %>% glimpse()
data_paper$LTC <- factor(data_paper$LTC, levels = c("rules","talent","luck"))
mnlr_1 <- multinom(LTC ~ T*W, data=data_paper)
summary(mnlr_1)
exp(summary(mnlr_1)$coefficients)[,"TRE1"]
newx <- data_paper %>% data_grid(T="RA",W,.model=mnlr_1)
newy <- cbind(newx,predict(mnlr_1, newdata = newx, type = "probs")) %>% dplyr::select(talent)
print(newy)
mnlr_2 <- multinom(LTC ~ T*W + age, data=data_paper)
summary(mnlr_2)
delta = 0.1
grid <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=mnlr_2)
grid_delta <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=mnlr_2) %>% mutate(age = age + delta)
p_hat <- predict(mnlr_2, type="probs", newdata =grid) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent")) %>% rename(p_hat = value)
p_hat_delta <- predict(mnlr_2, type="probs", newdata =grid_delta) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent")) %>% rename(p_hat_delta = value)
p_hat_delta %>% left_join(p_hat, by=c("id")) %>% mutate(me_age = (p_hat_delta  - p_hat)/delta)
data_paper$LTC <- ordered(data_paper$LTC, levels = c("rules","luck","talent"))
ologit_1 <- polr(LTC ~ T*W, data=data_paper)
summary(ologit_1)
exp(-(summary(ologit_1)$coefficients["TRE1",1]))
newx <- data_paper %>% data_grid(T="RA",W,.model=ologit_1)
newy <- cbind(newx,predict(ologit_1, newdata = newx, type = "probs")) %>% dplyr::select(talent)
print(newy)
ologit_2 <- polr(LTC ~ T*W + age, data=data_paper)
summary(ologit_2)
delta = 0.1
grid <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=ologit_2)
grid_delta <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=ologit_2) %>% mutate(age = age + delta)
p_hat <- predict(ologit_2, type="probs", newdata =grid) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent")) %>% rename(p_hat = value)
p_hat_delta <- predict(ologit_2, type="probs", newdata =grid_delta) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent")) %>% rename(p_hat_delta = value)
p_hat_delta %>% left_join(p_hat, by=c("id")) %>% mutate(me_age = (p_hat_delta  - p_hat)/delta)
predict(ologit_2, type="probs", newdata =grid)
predict(ologit_2, type="probs", newdata =grid) %>% as_tibble()
predict(ologit_2, type="probs", newdata =grid) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent"))
p_hat_delta %>% left_join(p_hat, by=c("id")) %>% mutate(me_age = (p_hat_delta  - p_hat)/delta)
delta = 0.1
grid <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=mnlr_2)
grid_delta <- data_paper %>% data_grid(T="RA",W=0,age=20, .model=mnlr_2) %>% mutate(age = age + delta)
p_hat <- predict(mnlr_2, type="probs", newdata =grid) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent")) %>% rename(p_hat = value)
p_hat_delta <- predict(mnlr_2, type="probs", newdata =grid_delta) %>% as_tibble() %>%
mutate(id = c("rules","luck","talent")) %>% rename(p_hat_delta = value)
p_hat_delta
p_hat_delta %>% left_join(p_hat, by=c("id")) %>% mutate(me_age = (p_hat_delta  - p_hat)/delta)
predict(mnlr_2, type="probs", newdata =grid) %>% as_tibble()
predict(mnlr_2, type="probs", newdata =grid)
xaringan:::inf_mr()
xaringan:::inf_mr()
summary(poisson_death_age_cont)$coefficients
poisson_death_age <- glm(total_deaths ~ median_age, family=poisson(link="log"),
data=covid_subdata); summary(poisson_death_age)
glm(total_deaths/population ~ median_age, family=poisson(link="log"),
data=covid_subdata)
glm(total_deaths ~ median_age, family=poisson(link="log"), offset = ln(population) ,
data=covid_subdata); summary(poisson_death_age)
glm(total_deaths ~ median_age, family=poisson(link="log"), offset = log(population) ,
data=covid_subdata); summary(poisson_death_age)
glm(total_deaths ~ median_age, family=poisson(link="log"),
data=covid_subdata); summary(poisson_death_age)
glm(I(total_deaths/population) ~ median_age, family=poisson(link="log"),
data=covid_subdata); summary(poisson_death_age)
median_age, family=poisson(link="log"), offset = log(population) ,
data=covid_subdata); summary(poisson_death_age)
glm(total_deaths ~ median_age, family=poisson(link="log"), offset = log(population),
data=covid_subdata)
glm(total_deaths ~ median_age ,family=poisson(link="log"),
data=covid_subdata)
glm(total_deaths ~ median_age ,family=poisson(link="log"),
offset = log(population), data=covid_subdata)
glm(total_deaths ~ median_age ,family=poisson(link="log"),
data=covid_subdata)
glm(I(total_deaths/population) ~ median_age ,family=poisson(link="log"),
data=covid_subdata)
glm(total_deaths ~ median_age ,family=poisson(link="log"),
offset = log(population), data=covid_subdata)
glm(total_deaths ~ median_age ,family=poisson(link="log"),
data=covid_subdata)
glm(I(total_deaths/population) ~ median_age ,family=poisson(link="log"),
data=covid_subdata)
glm(total_deaths ~ median_age ,family=poisson(link="log"),
offset = log(population), data=covid_subdata)
warnings()
poisson_death_age <- glm(total_deaths ~ median_age, family=poisson(link="log"),
data=covid_subdata); summary(poisson_death_age)
summary(poisson_death_age)$coefficients[,c(1,2)]
poisson_death_age
poisson_death_age <- glm(total_deaths ~ median_age, family=poisson(link="log"),
data=covid_subdata); summary(poisson_death_age)
summary(poisson_death_age)$coefficients[,c(1,2)]
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),.model = poisson_death_age)
predictions <- grid %>% mutate(log_mu = predict(poisson_death_age, newdata=grid, type="link"))
predictions
poisson_death_agecont_mean <- glm(total_deaths ~ median_age + factor(continent) ,family=poisson(link="log"), data=covid_subdata)
summary(poisson_death_agecont_meant)$coefficients
poisson_death_agecont_mean <- glm(total_deaths ~ median_age + factor(continent) ,family=poisson(link="log"), data=covid_subdata)
summary(poisson_death_agecont_mean)$coefficients
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent.model = poisson_death_agecont_mean)
summary(poisson_death_agecont_mean)$coefficients[,c(1,2)]
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent,.model = poisson_death_agecont_mean)
grid
predictions <- grid %>% mutate(log_mu = predict(poisson_death_agecont_mean, newdata=grid, type="response"))
predictions %>%
ggplot(aes(x=median_age, y=log_mu, colour=continent)) +
geom_path(alpha=0.5, size=1.5) +
scale_color_viridis_d() +  scale_fill_viridis_d() +
theme(axis.text.y = element_text(size = 22), axis.text.x = element_text(size = 22),
axis.title.y = element_text(size = 24), axis.title.x = element_text(size = 24),
legend.text = element_text(size = 18)) +
labs(x="median age", y=expression( mu ), title =expression(paste(mu, ": promedio de muertes predichas")))
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent,.model = poisson_death_agecont_mean)
predictions <- grid %>% mutate(log_mu = predict(poisson_death_agecont_mean, newdata=grid, type="link"))
predictions %>%
ggplot(aes(x=median_age, y=log_mu, colour=continent)) +
geom_path(alpha=0.5, size=1.5) +
scale_color_viridis_d() +  scale_fill_viridis_d() +
theme(axis.text.y = element_text(size = 22), axis.text.x = element_text(size = 22),
axis.title.y = element_text(size = 24), axis.title.x = element_text(size = 24),
legend.text = element_text(size = 18)) +
labs(x="median age", y=expression( log(mu) ), title =expression(paste(log(mu), ":log promedio de muertes predichas")))
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent,.model = poisson_death_agecont_mean)
predictions <- grid %>% mutate(log_mu = predict(poisson_death_agecont_mean, newdata=grid, type="link"))
predictions %>%
ggplot(aes(x=median_age, y=log_mu, colour=continent)) +
geom_path(alpha=0.5, size=1.5) +
scale_color_viridis_d() +  scale_fill_viridis_d() +
theme(axis.text.y = element_text(size = 22), axis.text.x = element_text(size = 22),
axis.title.y = element_text(size = 24), axis.title.x = element_text(size = 24),
legend.text = element_text(size = 18), legend.position = "bottom") +
labs(x="median age", y=expression( ln(mu) ), title =expression(paste(ln(mu), ": ln promedio de muertes predichas")))
xaringan:::inf_mr()
log(1)
log(0)
log(1)
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent,.model = poisson_death_agecont_rate)
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent,.model = poisson_death_agecont_rate)
predictions <- grid %>% mutate(log_mu = predict(poisson_death_agecont_rate, newdata=grid, type="link"))
grid <- covid_subdata %>% data_grid(median_age=seq_range(median_age,n=50),continent,population=1,
.model = poisson_death_agecont_rate)
predictions <- grid %>% mutate(log_mu = predict(poisson_death_agecont_rate, newdata=grid, type="link"))
predictions %>%
ggplot(aes(x=median_age, y=log_mu, colour=continent)) +
geom_path(alpha=0.5, size=1.5) +
scale_color_viridis_d() +  scale_fill_viridis_d() +
theme(axis.text.y = element_text(size = 22), axis.text.x = element_text(size = 22),
axis.title.y = element_text(size = 24), axis.title.x = element_text(size = 24),
legend.text = element_text(size = 18), legend.position = "bottom") +
labs(x="median age", y=expression( ln(mu) ), title =expression(paste("ln(",mu, "): ln promedio de muertes predichas")))
summary(poisson_death_agecont_rate)$coefficients[,c(1,2)]
covid_subdata %>% ggplot(aes(x=total_deaths, y=location, colour=continent)) + geom_col()
covid_subdata %>% ggplot(aes(x=total_deaths, y=continent)) + geom_col()
covid_subdata %>% ggplot(aes(reorder(continent, -total_deaths, sum), total_deaths))) + geom_col()
covid_subdata %>% ggplot(aes(reorder(continent, -total_deaths, sum), total_deaths)) + geom_col()
covid_subdata %>% ggplot(aes(reorder(continent, -total_deaths), total_deaths)) + geom_col()
covid_subdata %>% ggplot(aes(x = reorder(continent, -total_deaths), y = -total_deaths)) + geom_bar(stat = "identity")
covid_subdata %>% ggplot(aes(x = reorder(continent, -total_deaths), y = xtotal_deaths)) + geom_bar(stat = "identity")
covid_subdata %>% ggplot(aes(x = reorder(continent, -total_deaths), y = total_deaths)) + geom_bar(stat = "identity")
covid_subdata %>% ggplot(aes(x = reorder(continent, -(total_deaths/continent)), y = (total_deaths/continent))) + geom_bar(stat = "identity") +
labs(x="", y="% muertes por Covid-19")
covid_subdata %>% ggplot(aes(x = reorder(continent, -(total_deaths/population)), y = (total_deaths/population))) + geom_bar(stat = "identity") +
labs(x="", y="% muertes por Covid-19")
covid_subdata %>% ggplot(aes(x = reorder(continent, -total_deaths), y = total_deaths)) + geom_bar(stat = "identity") +
labs(x="", y="Total de muertes por Covid-19")
covid_subdata %>% ggplot(aes(x = reorder(continent, -total_deaths), y = total_deaths)) + geom_bar(stat = "identity") +
labs(x="", y="Total de muertes por Covid-19")
library("tidyverse")
library("wesanderson")
library("cowplot")
library("lubridate")
library("viridis")
setwd(
"~/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2020_2_data_analysis_r/repo/slides/class_12/")
# leer archivo csv
covid_data <- read_delim("covid_data.csv", delim=";")
covid_data  %>% glimpse()
covid_subdata <- covid_data %>% filter(date==as.Date("2020-11-17")) %>%
dplyr::select(continent,location,total_cases,total_deaths, total_tests, population,population_density,
median_age, gdp_per_capita,human_development_index,diabetes_prevalence,hospital_beds_per_thousand)
covid_subdata
# leer archivo csv
covid_data <- read_delim("covid_data.csv", delim=";")
covid_data <- covid_data %>% filter(date==as.Date("2020-11-17"))
covid_data  %>% glimpse()
covid_subdata %>% ggplot(aes(x=new_deaths_per_million, y=diabetes_prevalence))
covid_data %>% ggplot(aes(x=new_deaths_per_million, y=diabetes_prevalence))
covid_data %>% ggplot(aes(x=new_deaths_per_million, y=diabetes_prevalence)) %>%
geom_point(alpha=0.1)
covid_data %>% ggplot(aes(x=new_deaths_per_million, y=diabetes_prevalence)) +
geom_point(alpha=0.1)
covid_data %>% ggplot(aes(x=new_deaths_per_million, y=diabetes_prevalence)) +
geom_point(alpha=0.1) +
scale_x_log10()
covid_data %>% ggplot(aes(x=new_deaths_per_million, y=diabetes_prevalence)) +
geom_point(alpha=0.5) +
scale_x_log10()
covid_data %>% ggplot(aes(x=new_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.5) +
scale_x_log10()
covid_data %>% ggplot(aes(x=new_cases_per_million, y=population_density)) +
geom_point(alpha=0.5)
covid_data %>% ggplot(aes(x=new_cases_per_million, y=population_density)) +
geom_point(alpha=0.5) +
scale_y_log10()
covid_data %>% ggplot(aes(x=new_cases_per_million, y=population_density)) +
geom_point(alpha=0.5) +
scale_y_log10() + scale_x_log10()
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.5)
jitter <- position_jitter(width = 5, height = 15)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.5, position = jitter) +
scale_x_log10()
jitter <- position_jitter(width = 5, height = 15)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.5, position = jitter)
jitter <- position_jitter(width = 10, height = 1)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.5, position = jitter)
jitter <- position_jitter(width = 10, height = 1)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3, position = jitter)
jitter <- position_jitter(width = 100, height = 1)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3, position = jitter)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3, position = jitter) +
scale_x_log10() + scale_y_log10()
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3, position = jitter) +
scale_x_log10() + scale_y_log10()
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10()
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3)
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10()
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10()
covid_data %>% ggplot(aes(x=total_deaths_per_million, y=hospital_beds_per_thousand)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(x=total_deaths_per_million,
y=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(x=total_deaths_per_million,
y=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F) +
labs(x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F) +
labs(x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.") +
facet_wrap(continent ~ .)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F) +
labs(x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.") +
facet_wrap(continent ~ .) +
theme_bw() +
theme(legend.position = "bottom")
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(
legend.position='none'
)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.position='none')
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(legend.position='none')
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
theme(legend.position='none')
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
geom_density_2d_filled()
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
geom_density_2d_filled() + facet_wrap(continent)
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
geom_density_2d_filled() + facet_wrap( .~ continent)
covid_data
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled()
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
scale_fill_viridis_c() +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled(alpha = 0.5) +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled(alpha = 0.8) +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F) +
labs(x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.") +
facet_wrap(continent ~ .) +
theme_bw() +
theme(legend.position = "bottom")
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F)
covid_data %>% ggplot(aes(y=total_deaths_per_million,
x=hospital_beds_per_thousand,
group=continent,
colour=continent
)) +
geom_point(alpha=0.3) +
scale_x_log10() + scale_y_log10() +
geom_smooth(method = "lm", se=F) +
labs(x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.") +
facet_wrap(continent ~ .) +
theme_bw() +
theme(legend.position = "bottom")
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=hospital_beds_per_thousand)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data  %>% glimpse()
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=gdp_per_capita)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="Camas de hospital por mil hbs.", y="muertes totales por millón hbs.")
covid_data %>% ggplot(aes(y=total_deaths_per_million, x=gdp_per_capita)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="GDP per cápita", y="muertes totales por millón hbs.")
p <- covid_data %>% ggplot(aes(y=total_deaths_per_million, x=gdp_per_capita)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="GDP per cápita", y="muertes totales por millón hbs.")
p
ggsave(p,"miprimerggplor.pdf", width = 20, height = 20, units = "cm")
?ggsave
p <- covid_data %>% ggplot(aes(y=total_deaths_per_million, x=gdp_per_capita)) +
scale_x_log10() + scale_y_log10() +
geom_density_2d_filled() +
labs(title="Grafico de densidad",  x="GDP per cápita", y="muertes totales por millón hbs.")
ggsave("miprimerggplor.pdf", p, width = 20, height = 20, units = "cm")
