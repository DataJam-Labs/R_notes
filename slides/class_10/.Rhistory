logit_affairs_sex_ym0$pred
cv_logit_affairs_sex_ym0
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null
cv_logit_affairs_sex_ym0
cv_logit_affairs_sex_ym1
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_null <- train(factor(everaffair_d) ~ 1,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null
cv_logit_affairs_null
cv_logit_affairs_null <- train(factor(everaffair_d) ~ 1,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null <- train(factor(everaffair_d) ~ factor(1),  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null <- train(factor(everaffair_d) ~ . ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null
use warnings()
cv_logit_affairs_null <- train(factor(everaffair_d) ~ .ym ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_null
cv_logit_affairs_sex_ym0
cv_logit_affairs_sex_ym1
confusionMatrix(cv_logit_affairs_sex_ym0)
confusionMatrix(cv_logit_affairs_sex_ym1)
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
confusionMatrix(cv_logit_affairs_sex_ym1)
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ ym*rate + I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
confusionMatrix(cv_logit_affairs_sex_ym1)
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ factor(sex)*ym*rate +  factor(sex)*I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
confusionMatrix(cv_logit_affairs_sex_ym1)
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
cv_logit_affairs_null <- train(factor(everaffair_d) ~ ym ,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl, metric = "Accuracy")
cv_logit_affairs_sex_ym0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
cv_logit_affairs_sex_ym1 <- train(factor(everaffair_d) ~ factor(child)*ym*rate +  factor(child)*I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial",
trControl = ctrl)
cv_logit_affairs_sex_ym1
confusionMatrix(cv_logit_affairs_sex_ym1)
?confusionMatrix
a <- confusionMatrix(cv_logit_affairs_sex_ym0)
a
a$table
a$table
a$B
a$norm
a$text
summary(a)
a
names(a)
names$table
$table
a$table
a$norm
a$B
a$text
print(a)
a[-"text"]
a[-text]
a[,-text]
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
ctrl <- trainControl(method = "repeatedcv", number = 10, savePredictions = TRUE)
ctrl
cv_logit_affairs0 <- train(factor(everaffair_d) ~ ym + factor(child) + rate,  data=affairsdata, method="glm", family="binomial", trControl = ctrl)
cv_logit_affairs0
cv_logit_affairs0$pred
cv_logit_affairs1 <- train(factor(everaffair_d) ~ factor(child)*ym*rate +  factor(child)*I(ym^2)*rate,  data=affairsdata, method="glm", family="binomial", trControl = ctrl)
confusionMatrix(cv_logit_affairs0)
xaringan:::inf_mr()
xaringan:::inf_mr()
read.delim("value_added_agricultue.csv", sep= ";")
setwd("/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2020_2_data_analysis_r/repo/slides/class_10/")
read.delim("value_added_agricultue.csv", sep= ";")
va_messy <-read.delim("value_added_agricultue.csv", sep= ";")
View(va_messy)
xaringan:::inf_mr()
xaringan:::inf_mr()
View(va_messy)
va_messy %>%  row_to_names(row_number = 1)
va_messy %>% row_to_names(row_number = 1) %>% View()
va_messy %>% row_to_names(row_number = 1) %>% View()
privot_longer(cols = -c(``))
va_messy %>% row_to_names(row_number = 1) %>% View()
privot_longer(cols = -c(` `))
va_messy %>% row_to_names(row_number = 1) %>%
privot_longer(cols = -c(` `))
va_messy %>% row_to_names(row_number = 1) %>%
tidyr::privot_longer(cols = -c(` `))
va_messy %>% row_to_names(row_number = 1) %>%
tidyr::privot_longer(cols = -c(``))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1)
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
tidyr::privot_longer(cols = -c("country"))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value")
?pivot_longer
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value", names_ptypes = integer())
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value", names_ptypes = list(year=character()))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value", names_ptypes = list(year=integer()))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value", names_ptypes = list(year=character()))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1)
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>% View()
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value", names_ptypes = list(year=character()))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value", names_ptypes = list(year=character()))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.numeric(.x)))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.numeric(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value")
va_data <- va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.numeric(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
drop_na(added_value)
va_data
va_data %>% arrange(year)
va_data %>% arrange(desc(year))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.numeric(.x)))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.numeric(.x))) %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value")
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value) )
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value) ) %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value) ) %>%
mutate(added_value = as.numeric(added_value))
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value) ) %>%
mutate(added_value = as.numeric(added_value)) %>%
arrange(year)
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value) ) %>%
mutate(added_value = as.numeric(added_value)) %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value)) %>%
arrange(year)
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value)) %>% View()
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value)) %>%
drop_na(added_value) %>%
arrange(year)
va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value)) %>%
drop_na(added_value) %>%
arrange(year,country)
va_data <- va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value)) %>%
drop_na(added_value) %>%
arrange(year,country)
va_data
xaringan:::inf_mr()
?complete
va_data %>% complete(added_value, nesting(country,year))
va_data %>% complete(added_value, nesting(country,year)) %>% View()
va_data %>% complete(nesting(country,year)) %>% View()
df <- tibble(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
df
va_data %>% complete(country,year)
va_data %>% complete(country,year) %>% View()
va_data <- va_messy %>% row_to_names(row_number = 1) %>%
rename(country = 1) %>%
mutate(across(`1800`:`1938`, ~ as.character(.x))) %>%
pivot_longer(cols = -c("country"), names_to = "year", values_to = "added_value") %>%
mutate(added_value = if_else(added_value == "", NA_character_,added_value)) %>%
drop_na(added_value) %>%
arrange(year,country)
va_data
##tidyr::complete()
---
class: fullscreen,left, top, top, text-azzurro
background-image: url("images/bicicleta.jpg")
va_data %>% complete(country,year)
va_data %>% complete(country,year) %>%
fill(added_value, .direction = c("down"))
va_data %>% complete(country,year) %>%
fill(added_value, .direction = c("up"))
va_data %>% complete(country,year) %>% View()
va_data %>% complete(country,year) %>%
fill(added_value, .direction = c("up")) %>% View()
va_data %>% complete(country,year) %>% View()
va_data %>% complete(country,year) %>% select(country=="Austria")
va_data %>% complete(country,year) %>% filter(country=="Austria")
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1916)
.pull-left[
```{r}
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913)
```
]
--
.pull-right[
```{r}
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
fill(added_value, .direction = c("downup"))
```
]
va_data %>% complete(country,year) %>% View()
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913)
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
mutate()
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
mutate(y = c(NA,sample(1:32)))
c(NA,sample(1:32))
c(NA,sample(10,1:32)
)
c(NA,sample(1:32,9))
dummy_data >- va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
mutate(y = c(NA,sample(1:32,9)))
dummy_data <- va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
mutate(y = c(NA,sample(1:32,9)))
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913)
va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
mutate(y = c(NA,sample(1:32,24)))
dummy_data <- va_data %>% complete(country,year) %>%
filter(country=="Austria", year > 1913) %>%
mutate(y = c(NA,NA,sample(1:32,23)))
dummy_data
dummy_data %>% drop_na()
dummy_data %>% drop_na(any_of("added_value","country"))
dummy_data %>% drop_na(any_of("added_value", ..., "country"))
xaringan:::inf_mr()
library(carData)
??carData
data( Womenlf )
force(Womenlf)
data(Salaries)
force(Salaries)
data(Salaries)
datos_salarios <- Salaries %<% as_tibble()
data(Salaries)
datos_salarios <- Salaries %>% as_tibble()
datos_salarios
datos_salarios <- datos_salarios %>% mutate(sex_d = case_when(sex=="Male" ~ 1, sex=="Male" ~ 0))
datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(sex_d, salary), ~ mean(.x, na.rm = T) ))
datos_salarios <- datos_salarios %>% mutate(sex_d = case_when(sex=="Male" ~ 1, sex=="Female" ~ 0))
datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(sex_d, salary), ~ mean(.x, na.rm = T) ))
datos_salarios <- datos_salarios %>% mutate(sex_d = case_when(sex=="Male" ~ 1, sex=="Female" ~ 0))
datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(sex_d, salary), ~ mean(.x, na.rm = T) ))
data(Salaries)
datos_salarios <- Salaries %>% as_tibble()
datos_salarios <- datos_salarios %>% mutate(sex_d = case_when(sex=="Male" ~ 1, sex=="Female" ~ 0))
datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(sex_d, salary), ~ mean(.x, na.rm = T) ))
disciplinas <- tibble(discipline = c("A","B"), names = c("theoretical departments", "applied departments") )
datos_salarios <- datos_salarios %>% mutate(male = case_when(sex=="Male" ~ 1, sex=="Female" ~ 0))
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(male, salary), ~ mean(.x, na.rm = T) ))
disciplinas <- tibble(discipline = c("A","B"), names = c("theoretical departments", "applied departments") )
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(male, salary), ~ mean(.x, na.rm = T) ))
disciplinas <- tibble(discipline = c("A","B"), names = c("theoretical departments", "applied departments") )
tabla_1 %>% full_join(disciplinas, by="discipline")
disciplinas <- tibble(discipline = c("A","B","C"), names = c("theoretical departments", "applied departments", "other") )
tabla_1 %>% full_join(disciplinas, by="discipline")
datos_salarios <- datos_salarios %>% mutate(male = case_when(sex=="Male" ~ 1, sex=="Female" ~ 0))
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(male, salary), ~ mean(.x, na.rm = T) ))
disciplinas <- tibble(discipline = c("A","B"), names = c("theoretical departments", "applied departments") )
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(male, salary), ~ list(median = mean(.x, na.rm = T), max = max(.x, na.rm = T) ) ))
tabla_1
datos_salarios
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(yrs.since.phd, salary), ~ mean(.x, na.rm = T) ))
data(Salaries)
datos_salarios <- Salaries %>% as_tibble()
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(yrs.since.phd, salary), ~ mean(.x, na.rm = T) ))
disciplinas <- tibble(discipline = c("A","B"), names = c("theoretical departments", "applied departments") )
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(yrs.since.phd, salary), ~ mean(.x, na.rm = T) ))
disciplinas <- tibble(discipline = c("A","B"), names = c("theoretical departments", "applied departments") )
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c(yrs.since.phd, salary), ~ list(media = mean(.x, na.rm = T), max = max(.x, na.rm = T) ) ))
tabla_1
datos_salarios
datos_salarios %>% group_by(rank,discipline) %>%
summarise(
across(
c("yrs.since.phd", "salary"), ~ list(
media = mean(.x, na.rm = T), max = max(.x, na.rm = T)
)
)
)
datos_salarios %>% group_by(rank,discipline) %>%
summarise(
across(
c("yrs.since.phd", "salary"), ~ list(
media = mean(.x, na.rm = T), median = median(.x, na.rm = T)
)
)
)
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(
across(
c("yrs.since.phd", "salary"), list(
media = ~ mean(.x, na.rm = T), max = ~ max(.x, na.rm = T)
)
)
)
tabla_1
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c("yrs.since.phd", "salary"),
list(media = ~ mean(.x, na.rm = T), max = ~ max(.x, na.rm = T) )
)
)
disciplinas <- tibble(discipline = c("A","B","C"), names = c("theoretical departments", "applied departments", "other") )
tabla_1 %>% full_join(disciplinas, by="discipline")
tabla_1 %>% pivot_longer(-c(rank,discipline,names))
tabla_1 <- tabla_1 %>% full_join(disciplinas, by="discipline")
tabla_1 <- tabla_1 %>% full_join(disciplinas, by="discipline")
tabla_1
data(Salaries)
datos_salarios <- Salaries %>% as_tibble()
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c("yrs.since.phd", "salary"),
list(media = ~ mean(.x, na.rm = T), max = ~ max(.x, na.rm = T) )
)
)
disciplinas <- tibble(discipline = c("A","B","C"), names = c("theoretical departments", "applied departments", "other") )
tabla_1 <- tabla_1 %>% full_join(disciplinas, by="discipline")
tabla_1 %>% pivot_longer(-c(rank,discipline,names))
tabla_1 %>% pivot_longer(-c(rank,discipline,names))
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value")
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value")
separate(var_stat, into = c("variable", "stat"), sep="_" )
?separate
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" )
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" )
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value)
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c("yrs.since.phd", "salary"),
list(media = ~ mean(.x, na.rm = T), max = ~ max(.x, na.rm = T) )
)
)
tabla_1
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value) %>%
replace_na(rank = "No info.", media=0, max=0)
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value)
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value")
data(Salaries)
datos_salarios <- Salaries %>% as_tibble()
tabla_1 <- datos_salarios %>% group_by(rank,discipline) %>%
summarise(across( c("yrs.since.phd", "salary"),
list(media = ~ mean(.x, na.rm = T), max = ~ max(.x, na.rm = T) )
)
)
disciplinas <- tibble(discipline = c("A","B","C"), names = c("theoretical departments", "applied departments", "other") )
tabla_1 <- tabla_1 %>% full_join(disciplinas, by="discipline")
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value")
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" )
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value)
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value)
tabla_1
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value) %>%
replace_na(rank = "No info.", media=0, max=0)
tabla_1 %>% pivot_longer(-c(rank,discipline,names), names_to="var_stat", values_to="value") %>%
separate(var_stat, into = c("variable", "stat"), sep="_" ) %>%
pivot_wider(names_from = stat, values_from = value) %>%
replace_na(list(rank = "No info.", media=0, max=0))
