pdf_document: default
html_document:
df_print: paged
---
```{r, echo=FALSE}
# Escribir install.packages("tinytex") en la consola para instalar "tinytex"
# Carga "tinytex" para compilar PDF
library("tinytex")
```
Ponderación: 12% de la nota final del curso
Entrega: Desde el momento de entrega, los estudiantes tiene 1 exacta semana de plazo para completar esta tarea.
Formato: Desarrollar esta tarea en un RScript, agregando comentarios cuando sea necesario.
1) Instalar y cargar el paquete (desde el Script) `CarData`.
````{r}
install.packages("carData")
library("carData")
````
2) Usa la documentación del paquete `CarData` para identificar los datos correspondientes a "Duncan's Occupational Prestige Data"
3) Carga los datos y crea un objeto que los contenga. Llama tal objeto "datos_duncan".
````{r}
data("Duncan")
datos_duncan <- Duncan
rm(Duncan) # remueve "flotante"
````
4) Muestra las primeras y las últimas 6 observaciones de la base de datos en la consola.
````{r}
head(datos_duncan)
tail(datos_duncan)
````
5) Crea una base de datos que contenga sólo las variables `type` and `prestige` de "datos_duncan". Llama tal objeto "subdatos_duncan". Muestra las dimensiones de la nueva bases de datos.
````{r}
subdatos_duncan <- datos_duncan[,c("type","education","prestige")]
dim(subdatos_duncan)
````
6) Presenta un resumen estadístico (summary) de las variables en la base de datos.
````{r}
summary(subdatos_duncan)
````
7) Chequea la presencia de valores perdidos en la variable "education". Luego, calcula la media de la variable "education" y almacénala en un objeto llamado "education_promedio".
````{r}
is.na(subdatos_duncan$education)
education_promedio <- mean(subdatos_duncan$education)
````
8) Crea una nueva variable llamada "educacion_agg". Asigna valor 1 a "educacion_agg" para aquellas observaciones en las cuales la variable "education" toma un valor por sobre la media. Asigna valor 0 a "educacion_agg" para aquellas observaciones en las cuales la variable "education" toma un valor igual o menor a la media.
````{r}
subdatos_duncan$educacion_agg <- NA
subdatos_duncan$educacion_agg[subdatos_duncan$education > education_promedio] <- 1
subdatos_duncan$educacion_agg[subdatos_duncan$education <= education_promedio] <- 0
````
9) Usa un loop para calcular la media y la desviación estándar de la variable "prestige" para las observaciones en cada uno de los niveles de la variable "educacion_agg". No olvides usar el comando `print()` para mostrar los cálculos ejecutados dentro del loop.
````{r}
for (i in 0:1) {
print(mean(subdatos_duncan$prestige[subdatos_duncan$educacion_agg==i]))
print(sd(subdatos_duncan$prestige[subdatos_duncan$educacion_agg==i]))
}
````
10) Crea un scatterplot de las variables "prestige" and "education". Dale un nombre informativo a cada eje.
````{r}
plot(subdatos_duncan$prestige,subdatos_duncan$education, xlab="Prestige", ylab="Education")
````
install.packages("carData")
library("carData")
data("Duncan")
datos_duncan <- Duncan
rm(Duncan) # remueve "flotante"
write.csv(datos_duncan,"Duncan.csv")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
odd_hat <- predict(logit_affairs_sex_ym, type="link") # prob predichas cada obs.
odd_hat
odd_hat <- exp(predict(logit_affairs_sex_ym, type="link")) # prob predichas cada obs.
delta = 0.01 # cantidad cambio
affairsdata_delta <- affairsdata %>% mutate(ym = ym + delta) # cambio marginal en ym
# probabilidad predicha con ym aumentado marginalmente
odd_hat_delta <- exp(predict(logit_affairs_sex_ym, newdata=affairsdata_delta ,type="link") )
odd_hat <- exp(predict(logit_affairs_sex_ym, type="link")) # prob predichas cada obs.
delta = 0.01 # cantidad cambio
affairsdata_delta <- affairsdata %>% mutate(ym = ym + delta) # cambio marginal en ym
# probabilidad predicha con ym aumentado marginalmente
odd_hat_delta <- exp(predict(logit_affairs_sex_ym, newdata=affairsdata_delta ,type="link") )
me_ym_approx <- (odd_hat_delta - odd_hat)/delta # approx. numerica marginal effect.
# average marginal effect
mean(me_ym_approx)
beta_ym = logit_affairs_sex_ym$coefficients[3] # coeficiente ym
beta_ym
me_ym <- beta_ym*odd_hat  # approx. numerica marginal effect.
beta_ym = logit_affairs_sex_ym$coefficients[3] # coeficiente ym
odd_hat <- exp(predict(logit_affairs_sex_ym, type="link")) # prob predichas cada obs.
delta = 0.01 # cantidad cambio
affairsdata_delta <- affairsdata %>% mutate(ym = ym + delta) # cambio marginal en ym
# probabilidad predicha con ym aumentado marginalmente
odd_hat_delta <- exp(predict(logit_affairs_sex_ym, newdata=affairsdata_delta ,type="link") )
me_ym_approx <- (odd_hat_delta - odd_hat)/delta # approx. numerica marginal effect.
me_ym <- beta_ym*odd_hat  # approx. numerica marginal effect.
# average marginal effect
mean(me_ym_approx)
mean(me_ym)
xaringan:::inf_mr()
xaringan:::inf_mr()
fivenum()
fivenum(22)
fivenum(rnorm())
fivenum(rnorm(1000))
?fivenum
?margins
margins(logit_affairs_sex_ym,
at = list(sex = c("male", "female"),
ym = fivenum(affairsdata))
)
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = fivenum(affairsdata$ym)))
margins(logit_affairs_sex_ym,
at = list(sex = c("male", "female"),
ym = fivenum(affairsdata)  )
)
)
margins(logit_affairs_sex_ym,
at = list(sex = c("male", "female"),
ym = fivenum(affairsdata))
)
)
[]
()
margins(logit_affairs_sex_ym,
at = list(sex = c("male", "female"),
ym = fivenum(affairsdata))
)
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = fivenum(affairsdata)))
?margins
affairsdata %>% glimpse()
rlang::last_error()
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = fivenum(affairsdata$ym)))
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = c(1)))
fivenum(affairsdata$ym)
c(fivenum(affairsdata$ym))
as.vector(fivenum(affairsdata$ym))
vector(fivenum(affairsdata$ym))
as.array(fivenum(affairsdata$ym))
a <- c(1,3,1,3)
A
A
a
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = as.array(fivenum(affairsdata$ym)))
)
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = c(1,3,4) ))
fivenum(affairsdata$ym) %>% class()
fivenum(affairsdata$ym)
fivenum(affairsdata$ym) + 1
fivenum(affairsdata$ym) -> a
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = a ))
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = c(a) ))
a
margins(logit_affairs_sex_ym, at = list(sex = c("male", "female"), ym = quantile(affairsdata$ym, p=c(0.25,0.5,0.75)) ))
beta_ym = logit_affairs_sex_ym$coefficients[3] # coeficiente ym
grid <- affairsdata %>% data_grid(male, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)), .model=logit_affairs_sex_ym2); grid
p_hat <- predict(logit_affairs_sex_ym2, newdata=grid, type="response") # prob predichas cada obs.
mer_ym = beta_ym*p_hat*(1-p_hat); mer_ym # efecto marginal para cada obs.
p_hat
beta_ym = logit_affairs_sex_ym$coefficients[3] # coeficiente ym
grid <- affairsdata %>% data_grid(male, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)), .model=logit_affairs_sex_ym2); grid
grid <- grid %>% mutate(p_hat =predict(logit_affairs_sex_ym2, newdata=grid, type="response")) # prob predichas cada obs.
grid <- grid %>% mutate(mer_ym = beta_ym*p_hat*(1-p_hat)) # prob predichas cada obs.
grid
delta = 0.01 # cantidad cambio
grid <- affairsdata %>% data_grid(male, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)), .model=logit_affairs_sex_ym)
grid_delta <- affairsdata %>% data_grid(male, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)) + delta, .model=logit_affairs_sex_ym)
p_hat <- predict(logit_affairs_sex_ym, newdata=grid, type="response") # prob predichas cada obs.
p_hat_delta <- predict(logit_affairs_sex_ym, newdata=grid_delta, type="response") # prob predichas cada obs.
delta = 0.01 # cantidad cambio
grid <- affairsdata %>% data_grid(male, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)), .model=logit_affairs_sex_ym)
grid_delta <- affairsdata %>% data_grid(male, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)) + delta, .model=logit_affairs_sex_ym)
p_hat <- predict(logit_affairs_sex_ym, newdata=grid, type="response") # prob predichas cada obs.
p_hat_delta <- predict(logit_affairs_sex_ym, newdata=grid_delta, type="response") # prob predichas cada obs.
grid <- grid %>% mutate(mem_ym_approx = (p_hat_delta - p_hat)/delta); grid # efecto marginal para cada obs.
delta = 0.01 # cantidad cambio
grid <- affairsdata %>% data_grid(sex, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)), .model=logit_affairs_sex_ym)
grid_delta <- affairsdata %>% data_grid(sex, ym=quantile(affairsdata$ym, p=c(0.25,0.5,0.75)) + delta, .model=logit_affairs_sex_ym)
p_hat <- predict(logit_affairs_sex_ym, newdata=grid, type="response") # prob predichas cada obs.
p_hat_delta <- predict(logit_affairs_sex_ym, newdata=grid_delta, type="response") # prob predichas cada obs.
grid <- grid %>% mutate(mem_ym_approx = (p_hat_delta - p_hat)/delta); grid # efecto marginal para cada obs.
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
data_casen_csv
data_casen_csv %>%
filter(esc <= 12 & sexo == 2)
data_casen_csv %>%
filter(esc <= 12 & sexo == 2) %>%
with(mean(ytotcor, na.rm =T))
data_casen_csv %>%
filter(esc <= 12 & sexo == 2) %>%
with(mean(ytotcor, na.rm =T)) %>%
round(0)
?with
data_casen_csv %>%
filter(esc <= 12 & sexo == 2) %>%
mean(ytotcor, na.rm =T)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
5.5^2ç
5.5^2
(5.5)^2
log(5)
1/5
log(5.5)
1.609438 + 0.2 *(5.5 - 5)
log(10)
1.609438 + 0.2 * 5
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
summary(logit_affairs_sex_ym)$coefficients
summary(logit_affairs_sex_ym)$coefficients["ym",]
summary(logit_affairs_sex_ym)$coefficients["ym","Estimate"]
summary(logit_affairs_sex_ym)$coefficients["ym","Std. Error"]
a <- confint(logit_affairs_sex_ym)
names(a)
a
a["ym",]
confint(exp(logit_affairs_sex_ym))
exp_beta_ym <- exp(beta_ym); exp_beta_ym
exp(0.058429594)
install.packages("msm")
library(msm)
deltamethod(g=~exp(x1), mean=beta_ym, cov=se_ym)
?deltamethod
summary(logit_affairs_sex_ym)
summary(logit_affairs_sex_ym)$cov
summary(logit_affairs_sex_ym)$vcov
a
summary(logit_affairs_sex_ym) -> a
a
a$cov.scaled
(se_ym)^2
summary(logit_affairs_sex_ym)$cov.scaled
summary(logit_affairs_sex_ym)$coefficients
summary(logit_affairs_sex_ym)$coefficients[1,]
summary(logit_affairs_sex_ym)$coefficients[,1]
deltamethod(g=~exp(x1), mean=summary(logit_affairs_sex_ym)$coefficients[,1], cov=summary(logit_affairs_sex_ym)$cov.scaled)
summary(logit_affairs_sex_ym)$coefficients[,1]
logit_affairs_sex_ym$coefficients
library(msm)
deltamethod(g=~exp(x1), mean=logit_affairs_sex_ym$coefficients,cov=summary(logit_affairs_sex_ym)$cov.scaled)
summary(logit_affairs_sex_ym)$cov.scaled
?deltamethod
deltamethod(g=~ list( ~ exp(x1), ~ exp(x1), ~ exp(x1)), mean=logit_affairs_sex_ym$coefficients, cov=summary(logit_affairs_sex_ym)$cov.scaled)
deltamethod(g= list( ~ exp(x1), ~ exp(x1), ~ exp(x1)), mean=logit_affairs_sex_ym$coefficients, cov=summary(logit_affairs_sex_ym)$cov.scaled)
deltamethod(g= list( ~ exp(x1), ~ exp(x2), ~ exp(x3)), mean=logit_affairs_sex_ym$coefficients, cov=summary(logit_affairs_sex_ym)$cov.scaled)
ci95 <- function(mu,s) {mu + c(-2,2)*s}
apply(logit_affairs_sex_ym$coefficients,ci95,ses )
---
class: inverse, center, middle
library(msm)
ses <- deltamethod(g= list( ~ exp(x1), ~ exp(x2), ~ exp(x3)),
mean=logit_affairs_sex_ym$coefficients,
cov=summary(logit_affairs_sex_ym)$cov.scaled); ses
```
ci95 <- function(mu,s) {mu + c(-2,2)*s}
apply(logit_affairs_sex_ym$coefficients,ci95,ses)
library(msm)
ses <- deltamethod(g= list( ~ exp(x1), ~ exp(x2), ~ exp(x3)),
mean=logit_affairs_sex_ym$coefficients,
cov=summary(logit_affairs_sex_ym)$cov.scaled); ses
ci95 <- function(mu,s) {mu + c(-2,2)*s}
apply(logit_affairs_sex_ym$coefficients,ci95,ses)
apply(logit_affairs_sex_ym$coefficients,ses,ci95)
ci95(logit_affairs_sex_ym$coefficients,ses)
ses
logit_affairs_sex_ym$coefficients
ci95 <- function(mu,s) {mu + c(-2)*s}
ci95(logit_affairs_sex_ym$coefficients,ses)
ci95 <- function(mu,s) {
ll=mu + -2*s
ul=mu + 2*s
}
ci95(logit_affairs_sex_ym$coefficients,ses)
library(msm)
ses <- deltamethod(g= list( ~ exp(x1), ~ exp(x2), ~ exp(x3)),
mean=logit_affairs_sex_ym$coefficients,
cov=summary(logit_affairs_sex_ym)$cov.scaled); ses
ci95 <- function(mu,s) {
ll=mu + -2*s
ul=mu + 2*s
return(ll,ul)
}
ci95(logit_affairs_sex_ym$coefficients,ses)
library(msm)
ses <- deltamethod(g= list( ~ exp(x1), ~ exp(x2), ~ exp(x3)),
mean=logit_affairs_sex_ym$coefficients,
cov=summary(logit_affairs_sex_ym)$cov.scaled); ses
ci95 <- function(mu,s) {
ll=mu + -2*s
ul=mu + 2*s
return(list(ll,ul))
}
ci95(logit_affairs_sex_ym$coefficients,ses)
library(msm)
ses <- deltamethod(g= list( ~ exp(x1), ~ exp(x2), ~ exp(x3)),
mean=logit_affairs_sex_ym$coefficients,
cov=summary(logit_affairs_sex_ym)$cov.scaled); ses
ci95 <- function(mu,s) {
ll=mu + -2*s
ul=mu + 2*s
return(list(ll=ll,ul=ul))
}
ci95(logit_affairs_sex_ym$coefficients,ses)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
ci95 = round(quantile(betas2_bs, p=c(0.025,0.975)),2)
betas2_bs %>% as_tibble() %>% ggplot(aes(x=value)) +
geom_density(colour="black", fill="blue", alpha=0.1, size=1.5) +
scale_color_viridis_d() +
geom_vline(aes(xintercept = beta2, colour=paste0("beta2=",round(beta2,2)) ), size=1.5) +
geom_vline(aes(xintercept = quantile(betas2_bs, p=0.025),
colour=paste0("95% CI: (",ci95[1],",",ci95[2],")")), linetype="dashed", size=1.5) +
geom_vline(aes(xintercept = quantile(betas2_bs, p=0.975),
colour=paste0("95% CI: (",ci95[1],",",ci95[2],")")), linetype="dashed", size=1.5) +
guides(fill=FALSE) + labs(colour="", x="beta2") +
theme(axis.text.y = element_text(size = 22), axis.text.x = element_text(size = 22),
axis.title.y = element_text(size = 24), axis.title.x = element_text(size = 24),
legend.text = element_text(size = 18), legend.position="bottom") +
guides(color=guide_legend(nrow=3,byrow=TRUE))
xaringan:::inf_mr()
xaringan:::inf_mr()
library("readr")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2020_2_data_analysis_r/repo/slides/class_5/")
data_casen_csv <- read_csv("sample_casen2017.csv")
library("tidyverse")
data_casen_csv
data_casen_csv %>% select(sexo,edad,ytotcor)
data_casen_csv %>% select(sexo,edad,ytotcor) %>%
# Creación de nuevas variables
data_casen_csv %>% select(sexo,edad,ytotcor) %>% mutate(anno = 2017)
data_casen_csv %>% select(sexo,edad,ytotcor) %>%
data_casen_csv %>% select(sexo,edad,ytotcor) %>% filter(sexo==1)
data_casen_csv %>% select(sexo,edad,ytotcor) %>% filter(sexo==1)
data_casen_csv
data_casen_csv %>% select(sexo,edad,ytotcor)
data_casen_csv %>% select(sexo,edad,ytotcor) %>% filter(sexo==1)
data_casen_csv %>% select(sexo,edad,ytotcor)
data_casen_csv %>% select(sexo,edad,ytotcor) %>% mutate(anno = 2017)
data_casen_csv %>% select(sexo,edad,ytotcor) %>% mutate(anno = 2017)
data_casen_csv <- data_casen_csv %>% mutate(anno = 2017)
data_casen_csv
data_casen_csv %>% select(sexo,edad,ytotcor,anna)
data_casen_csv %>% select(sexo,edad,ytotcor,anno)
data_casen_csv %>% sample_n(size = 100, replace = T)
data_casen_csv %>% sample_frac(size = 0.05, replace = T)
data_casen_csv %>% group_by(sex)
data_casen_csv %>% group_by(sexo)
data_casen_csv %>% group_by(sexo) %>% sample_frac(size = 0.05, replace = T)
data_casen_csv %>% group_by(sexo) %>% sample_n(size = 4, replace = T)
data_casen_csv
data_casen_csv %>% select(sexo,edad,ytotcor,anno)
log(0)
log(0 + 0.1)
log(0 + 0.01)
data_casen_csv %>% select(sexo,edad,ytotcor,anno) %>% mutate(ln_ytotcor_mm = log((ytotcor + 1)/1000)
data_casen_csv %>% select(sexo,edad,ytotcor,anno) %>% mutate(ln_ytotcor_mm = log((ytotcor + 1)/1000)
data_casen_csv %>% select(sexo,edad,ytotcor,anno) %>% mutate(ln_ytotcor_mm = log((ytotcor + 1)/1000)
)
data_casen_csv %>% select(sexo,edad,ytotcor,anno) %>% mutate( ln_ytotcor_mm = log((ytotcor + 1)/1000) )
data_casen_csv
data_casen_csv <- data_casen_csv %>%
mutate(anno = 2017) %>%
mutate(ln_ytotcor_mm = log((ytotcor + 1)/1000))
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm)  %>%
select(!ln_ytotcor_mm)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo = if_else(sexo==1,1,0))
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo2 = if_else(sexo==1,1,0)) %>% select(sexo,sexo2)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo2 = if_else(sexo==1,1,0)) %>% select(sexo,sexo2)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo2 = if_else(sexo==1,1,0)) %>% select(sexo,sexo2) %>%
table(sexo,sexo2)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo2 = if_else(sexo==1,1,0)) %>% select(sexo,sexo2) %>%
table(.,sexo,sexo2)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo2 = if_else(sexo==1,1,0)) %>% select(sexo,sexo2)
data_casen_csv %>% select(sexo,edad,ytotcor,anno,ln_ytotcor_mm) %>%
mutate(sexo2 = if_else(sexo==1,1,0)) %>% select(sexo,sexo2) %>%
with(table(sexo,sexo2))
data_casen_csv %>% select(sexo,edad,ytotcor) %>%
mutate(sexo = if_else(sexo==1,sexo,0))
data_casen_csv %>% select(sexo,edad,ytotcor) %>%
mutate(sexo = if_else(sexo==1,edad,0))
data_casen_csv %>% select(sexo,edad,ytotcor)
data_casen_csv %>% select(sexo,edad,ytotcor) %>%
case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3)
data_casen_csv %>% select(sexo,edad,ytotcor) %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3)
)
data_casen_csv %>%
mutate(anno = 2017) %>%
mutate(ln_ytotcor_mm = log((ytotcor + 1)/1000)) %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))
data_casen_csv
data_casen_csv %>%
group_by(region)
data_casen_csv %>%
group_by(region) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T), first_age = first(edad)) %>%
ungroup() %>%
select(region,sexo,edad, ytotcor,n_region, mean_ytotcor_region,first_age )
cuadrado <- function(x) {x^2}
cuadrado <- function(x) {x^2}
data_casen_csv %>%
group_by(region) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T), cuadrado_edad = cuadrado(edad)) %>%
ungroup() %>%
select(region,sexo,edad, ytotcor,n_region, mean_ytotcor_region,cuadrado_edad )
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad)
)
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat)
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T))
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T)) %>%
ungroup() %>%
select(region,sexo,edad, ytotcor,n_region, mean_ytotcor_region)
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T)) %>%
ungroup() %>%
select(region,sexo,edad, ytotcor,edad_cat, n_region, mean_ytotcor_region)
data_casen_csv
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T)) %>%
ungroup()
data_casen_csv <- data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T)) %>%
select(!edad_cat) %>%
ungroup()
data_casen_csv
data_casen_csv <- data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ 1,
edad >18 & edad<=65 ~ 2,
edad > 65  ~ 3,
TRUE ~ edad))   %>%
group_by(region, sexo, edad_cat) %>%
mutate(n_region = n(), mean_ytotcor_region = mean(ytotcor, na.rm = T)) %>%
ungroup() %>%
select(!edad_cat)
data_casen_csv
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ "menor",
edad >18 & edad<=65 ~ "adulto",
edad > 65  ~ "viejo",
TRUE ~ edad))   %>% select(edad_cat)
data_casen_csv %>%
mutate(edad_cat = case_when(edad <= 18 ~ "menor",
edad >18 & edad<=65 ~ "adulto",
edad > 65  ~ "viejo",
TRUE ~ "missing"))   %>% select(edad_cat)
